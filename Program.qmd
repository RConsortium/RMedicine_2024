---
title: "R/Medicine Schedule"
# author: "Rich Iannone"
# date: "5/10/2024"
format: 
  html:
    code-fold: false
    echo: false
---

**Speakers: Please see additional instructions and deadlines in the [speaker guide](speaker_info.qmd).**

```{r, day1}
#| echo: false
#| warning: false
#| message: false

library(lubridate)
library(gt)
# For every day of the conference, have data laid out in this way
schedule_day_1 <-
  dplyr::tribble(
    ~start_time, ~end_time, ~t_number, ~t_type, ~t_title, ~t_speakers, ~t_speaker_titles, ~t_companies,
    "2024-06-10 11:00", "2024-06-10 14:00", "1A", "Workshop", "Causal Inference in R", "Travis Gerke", "Director of Data Science", "Prostate Cancer Clinical Trials Consortium",
    "2024-06-10 11:00", "2024-06-10 14:00", "1B", "Workshop", "Promover la Equidad Científica: Una Introducción al uso de R para la programación en Bioestadística y Ciencia de Datos, en Español", "Catalina Canizares-Escobar, Francisco Cardozo", "Study Coordinator, PhD student", "Florida International University",
    "2024-06-10 14:00", "2024-06-10 14:30",  NA, "Break", NA, NA, NA, NA,
    "2024-06-10 14:30", "2024-06-10 17:30", "2A", "Workshop", "Google BigQuery: First Steps in R", "Joy Payton", "Data Scientist", "CHOP",
    "2024-06-10 14:30", "2024-06-10 17:30", "2B", "Workshop", "Project Oriented Workflows", "Shannon Pileggi", "Data Scientist", "Prostate Cancer Clinical Trials Consortium",
    "2024-06-10 17:30", "2024-06-10 20:30", "3A", "Workshop", "Tidy time series analysis and forecasting", "Mitchell O'Hara-Wild", "Data Scientist", "Nectric"
  ) |>
  dplyr::mutate(duration = time_length(ymd_hm(end_time) - ymd_hm(start_time), unit = "mins"))
```

```{r}

# Create a table for the day of events
gt(schedule_day_1) |>
  tab_header(title = md("<br>Workshop Day 1<br>Monday, June 10, 2024.<br>All Times EST<br><br>")) |> # <- insert the date
  fmt_time(columns = c(start_time, end_time), time_style = "h_m_p") |>
  fmt_duration(
    columns = duration,
    input_units = "minutes",
    output_units = c("hours", "minutes")
  ) |>
  cols_move(columns = duration, after = end_time) |>
  cols_merge(
    columns = c(t_number, t_type, t_title, t_speakers, t_speaker_titles, t_companies),
    pattern = md("<<{1} - >>{2}<br><< {3}<br>{4}<br>{5}, {6}>>")
  ) |>
  cols_label(
    start_time ~ "Start Time",
    end_time ~ "End Time",
    duration ~ "Duration",
    t_number ~ ""
  ) |>
  cols_align(align = "center") |>
  cols_width(
    c(start_time, end_time, duration) ~ px(90),
    everything() ~ px(600)
  ) |>
  opt_align_table_header(align = "left") |>
  tab_options(
    heading.background.color = "lightblue",
    column_labels.background.color = "gray85"
  ) |>
  tab_style(
    locations = cells_body(rows = t_type == "Break"),
    style = cell_fill(color = "bisque")
  )

```

```{r, day2}
#| echo: false
#| warning: false
#| message: false
library(lubridate)
library(gt)
# For every day of the conference, have data laid out in this way
schedule_day_2 <-
  dplyr::tribble(
    ~start_time, ~end_time, ~t_number, ~t_type, ~t_title, ~t_speakers, ~t_speaker_titles, ~t_companies,
    "2024-06-10 11:00", "2024-06-10 14:00", "4A", "Workshop", "Next Generation Shiny Apps with {bslib} ", "Garrick Aden-Buie", "Software Engineer", "Posit",
    "2024-06-10 11:00", "2024-06-10 14:00", "4B", "Workshop", "From R to PowerPoint: Advanced PowerPoint Presentations Using {officer}", "Theo Roe, Colin Gillespie", "R educators", "Jumping Rivers",
    "2024-06-10 14:00", "2024-06-10 14:30",  NA, "Break", NA, NA, NA, NA,
    "2024-06-10 14:30", "2024-06-10 17:30", "5A", "Workshop", "Setting Up a Dockerized R Development Environment with VScode", "Rami Krispin", "Senior Manager/Data Scientist", "Apple",
    "2024-06-10 14:30", "2024-06-10 17:30", "5B", "Workshop", "REDCap + R: Teaming Up in the Tidyverse", "Stephan Kadauke, Will Beasley", "Assistant Professor, Associate Professor", "CHOP, Oklahoma University Health Sciences Center",
  ) |>
  dplyr::mutate(duration = time_length(ymd_hm(end_time) - ymd_hm(start_time), unit = "mins"))
```

```{r}

# Create a table for the day of events
gt(schedule_day_2) |>
  tab_header(title = md("<br>Workshop Day 2<br>Tuesday, June 11, 2024.<br><br>")) |> # <- insert the date
  fmt_time(columns = c(start_time, end_time), time_style = "h_m_p") |>
  fmt_duration(
    columns = duration,
    input_units = "minutes",
    output_units = c("hours", "minutes")
  ) |>
  cols_move(columns = duration, after = end_time) |>
  cols_merge(
    columns = c(t_number, t_type, t_title, t_speakers, t_speaker_titles, t_companies),
    pattern = md("<<{1} - >>{2}<br><< {3}<br>{4}<br>{5}, {6}>>")
  ) |>
  cols_label(
    start_time ~ "Start Time",
    end_time ~ "End Time",
    duration ~ "Duration",
    t_number ~ ""
  ) |>
  cols_align(align = "center") |>
  cols_width(
    c(start_time, end_time, duration) ~ px(90),
    everything() ~ px(600)
  ) |>
  opt_align_table_header(align = "left") |>
  tab_options(
    heading.background.color = "lightblue",
    column_labels.background.color = "gray85"
  ) |>
  tab_style(
    locations = cells_body(rows = t_type == "Break"),
    style = cell_fill(color = "bisque")
  )

```

```{r, day3}
#| echo: false
#| warning: false
#| message: false
library(lubridate)
library(gt)
# For every day of the conference, have data laid out in this way
schedule_day_3 <-
  dplyr::tribble(
    ~start_time, ~end_time, ~t_number, ~t_type, ~t_title, ~t_speakers, ~t_companies,
    "2024-06-12 10:00", "2024-06-12 10:55", "1", "Demo", "R Consortium's R-based Test Submission Package for FDA Evaluation: A Milestone in R-based Regulatory Submissions", "Joel Laxamana", "Genentech, A Member of the Roche Group",
    "2024-06-12 11:00", "2024-06-12 11:55", "2", "Demo", "R + Snowflake to enable Medical Research", "Rika Gorn, Posit", "Ralph Braun, Snowflake",
    "2024-06-12 12:00", "2024-06-12 12:30",  NA, "Break", NA, NA, NA, 
    "2024-06-12 12:30", "2024-06-12 13:25", "3", "Demo", "Handling Health Data Imbalance in Machine Learning Using R ", "Olawale Awe", "University of Colorado",
    "2024-06-12 13:30", "2024-06-12 14:25", "4", "Demo", "An Introduction to Tidy R Spatial Packages: Incorporating Historic Sociodemographic Data from the US Census and Visualizing Geographic Distributions ", "Stephen Uong and Christina Mehranbod", "Columbia University Mailman School of Public Health",
    "2024-06-12 14:30", "2024-06-12 15:25", "5", "Demo", "RosyREDCap – a REDCap-project-agnostic R package that uses an API token to make a single, updating, standardized R list object containing all metadata and data for exports, imports, transformation, and shiny applications", "Brandon Rose", "University of Miami",
    "2024-06-12 15:30", "2024-06-12 16:25", "6", "Demo", "Word embeddings in mental health, from exploration to confirmation, towards multidimensional diagnoses", "Thomas Charlon", "Harvard Medical School",
    "2024-06-12 16:30", "2024-06-12 17:25", NA, "Break", NA, NA, NA,
    "2024-06-12 17:30", "2024-06-12 18:25", "8", "Demo", "Using logistic regression coefficients as a query vector for semantic search.", "Robert Horton", "WV Labs",
  ) |>
  dplyr::mutate(duration = time_length(ymd_hm(end_time) - ymd_hm(start_time), unit = "mins"))
```

```{r}

# Create a table for the day of events
gt(schedule_day_3) |>
  tab_header(title = md("<br>Demo Day<br>Wednesday, June 12, 2024.<br><br>")) |> # <- insert the date
  fmt_time(columns = c(start_time, end_time), time_style = "h_m_p") |>
  fmt_duration(
    columns = duration,
    input_units = "minutes",
    output_units = c("hours", "minutes")
  ) |>
  cols_move(columns = duration, after = end_time) |>
  cols_merge(
    columns = c(t_number, t_type, t_title, t_speakers, t_companies),
    pattern = md("<<{1} - >>{2}<br><< {3}<br>{4}<br>{5}>>")
  ) |>
  cols_label(
    start_time ~ "Start Time",
    end_time ~ "End Time",
    duration ~ "Duration",
    t_number ~ ""
  ) |>
  cols_align(align = "center") |>
  cols_width(
    c(start_time, end_time, duration) ~ px(90),
    everything() ~ px(600)
  ) |>
  opt_align_table_header(align = "left") |>
  tab_options(
    heading.background.color = "lightblue",
    column_labels.background.color = "gray85"
  ) |>
  tab_style(
    locations = cells_body(rows = t_type == "Break"),
    style = cell_fill(color = "bisque")
  )

```

```{r, day4}
#| echo: false
#| warning: false
#| message: false
library(lubridate)
library(gt)
# For every day of the conference, have data laid out in this way
schedule_day_4 <-
  dplyr::tribble(
    ~start_time, ~end_time, ~t_number, ~t_type, ~t_title, ~t_speakers, ~t_companies,
    "2024-06-13 11:00", "2024-06-13 11:10", "1", "Intro", "Welcome to R/Medicine 2024", "Peter Higgins",  "University of Michigan",
    "2024-06-13 11:13", "2024-06-13 12:15", "2", "Keynote", "Statistical Challenges in Single-Cell and Spatial Transcriptomics", "Stephanie Hicks",  "Johns Hopkins",
    "2024-06-13 12:15", "2024-06-13 12:35", "4", "Regular talk", "flowchart: an R package for creating participant flow diagrams integrated with tidyverse", "Pau Satorra", "Germans Trias i Pujol Research Institute and Hospital (IGTP)",
    "2024-06-13 12:37", "2024-06-13 12:47", "5", "Lightning talk", "Reporting survival analysis results with the gtsummary and ggsurvfit packages", "Emily Zabor",  "Cleveland Clinic",
    "2024-06-13 12:49", "2024-06-13 13:09", "6", "Regular talk", "Survival analysis with tidymodels", "Hannah Frick", "Posit, PBC",
    "2024-06-13 13:11", "2024-06-13 13:31", "7", "Regular talk", "Cox Regression and other ways to survive survival analyses", "Mitchell Maltenfort", "Children's Hospital of Philadelphia",
    "2024-06-13 13:33", "2024-06-13 13:53", "8", "Regular talk", "Identifying latent subgroups using regularized mixture cure models to develop risk stratification systems in cancer: Illustration using the hdcuremodels R package", "Kellie Archer", "Ohio State University",
    "2024-06-13 13:53", "2024-06-13 14:08",  NA, "Break", NA, NA, NA, 
    "2024-06-13 14:08", "2024-06-13 14:18", "9", "Lightning talk", "Leveraging the Power of Teal-Based R-Shiny Applications: Case Study from a TechBio Company", "Kasra Yousefi", "Recursion Pharmaceuticals",
   "2024-06-13 14:20", "2024-06-13 14:30", "10", "Lightning talk", "A one year recap on teaching statistics to medical students: how can R and Quarto help?", "Chi Zhang", "University of Oslo",
  "2024-06-13 14:32", "2024-06-13 14:52", "11", "Regular talk", "Creating Data Packages with Overproof {rUM}", "Raymond Balise", "University of Miami",
  "2024-06-13 14:54", "2024-06-13 15:14", "12", "Regular talk", "SciDataReportR: Streamlining Scientific and Clinical Data Exploration in R", "Raha Dastgheyb", "Johns Hopkins School of Medicine",
  "2024-06-13 15:16", "2024-06-13 15:36", "13", "Regular talk", "Updating Quarto Slides Automatically with GitHub Actions", "Rose Hartman", "Children's Hospital of Philadelphia",
  "2024-06-13 15:36", "2024-06-13 15:51",  NA, "Break", NA, NA, NA, 
  "2024-06-13 15:51", "2024-06-13 16:11", "14", "Regular talk", "Don't merge datasets when you don't need to. Preserving the 'Experimental unit' is a key!", "Dror Berel", "Independent statistical consultant",
  "2024-06-13 16:13", "2024-06-13 16:33", "15", "Regular talk", "Generate Raw Synthetic Dataset for Clinical Trial", "Binod Jung Bogati", "",
  "2024-06-13 16:35", "2024-06-13 16:55", "16", "Regular talk", "OralOpioids: The Role of Statistical Software in Dealing with the US Opioid Crisis", "Ankona Banerjee", "Baylor College of Medicine",
  "2024-06-13 16:57", "2024-06-13 17:17", "17", "Regular talk", "World beyond {targets}: Embracing Data Pipelines in Life Sciences", "Aga Rasinska", "Appsilon",
  "2024-06-13 17:19", "2024-06-13 17:24", "18", "Closing remarks", "", "Michael Kane", "Yale University", 
  ) |>
  dplyr::mutate(duration = time_length(ymd_hm(end_time) - ymd_hm(start_time), unit = "mins"))
```

```{r}
# Create a table for the day of events
gt(schedule_day_4) |>
  tab_header(title = md("<br>Meeting Day 1<br>Thursday, June 13, 2024.<br><br>")) |> # <- insert the date
  fmt_time(columns = c(start_time, end_time), time_style = "h_m_p") |>
  fmt_duration(
    columns = duration,
    input_units = "minutes",
    output_units = c("hours", "minutes")
  ) |>
  cols_move(columns = duration, after = end_time) |>
  cols_merge(
    columns = c(t_number, t_type, t_title, t_speakers, t_companies),
    pattern = md("<<{1} - >>{2}<br><< {3}<br>{4}<br>{5}>>")
  ) |>
  cols_label(
    start_time ~ "Start Time",
    end_time ~ "End Time",
    duration ~ "Duration",
    t_number ~ ""
  ) |>
  cols_align(align = "center") |>
  cols_width(
    c(start_time, end_time, duration) ~ px(90),
    everything() ~ px(600)
  ) |>
  opt_align_table_header(align = "left") |>
  tab_options(
    heading.background.color = "lightblue",
    column_labels.background.color = "gray85"
  ) |>
  tab_style(
    locations = cells_body(rows = t_type == "Break"),
    style = cell_fill(color = "bisque")
  )

```

```{r, day5}
#| echo: false
#| warning: false
#| message: false
library(lubridate)
library(gt)
# For every day of the conference, have data laid out in this way
schedule_day_5 <-
  dplyr::tribble(
    ~start_time, ~end_time, ~t_number, ~t_type, ~t_title, ~t_speakers, ~t_companies,
    "2024-06-14 11:00", "2024-06-14 11:10", "1", "Welcome Back", "Welcome to R/Medicine 2024", "Peter Higgins", "University of Michigan",
    "2024-06-14 11:13", "2024-06-14 12:15", "2", "Keynote", "Reproducibility in Medical Research", "Gundula Bosch", "Johns Hopkins",
    "2024-06-14 12:17", "2024-06-14 12:37", "3", "Regular Talk", "Ah, Ha, Ha, Ha, Parameterise! Creating parameterised plot functions for flexible and reproducible data-to-viz pipelines", "Cara Thompson", "Building Stories with Data",
    "2024-06-14 12:39", "2024-06-14 12:59", "4", "Regular Talk", "Rmageddon - Mitigating Critical Vulnerabilities and Streamlining Deployment Processes", "Jake Riley and Hojjat Salmasian", "Children's Hospital of Philadelphia", 
    "2024-06-14 13:01", "2024-06-14 13:21", "5", "Regular Talk", "Comparing Analysis Method Implementations in Software (CAMIS): An open source repository to document differences in statistical methodology across software", "Agnieszka Tomczyk",  "PAREXEL",
    "2024-06-14 13:23", "2024-06-14 13:43", "6", "Regular Talk", "PhyloTrace - a Shiny App for Bacterial Pathogen Monitoring on a Genomic Level", "Filip Paskali and Marian Freisleben", "Furtwangen University",
    "2024-06-14 13:43", "2024-06-14 13:58",  NA, "Break", NA, NA, NA, 
    "2024-06-14 13:58", "2024-06-14 14:08", "7", "Lightning Talk", "R in Clinical Competency Committee {shiny + reticulate + selenium + ...}", "Ken Koon Wong", "Cleveland Clinic Akron General",
    "2024-06-14 14:10", "2024-06-14 14:20", "8", "Lightning Talk", "Health Equity Explorer Application Showcase", "Can Taşlıçukur, Appsilon", "Bill Adams, Boston Medical Center",
    "2024-06-14 14:22", "2024-06-14 14:32", "9", "Lightning Talk", "in_vivo_research_dashboard.Rmd", "Michael McCoy",  "Children's Hospital of Philadelphia",
    "2024-06-14 14:34", "2024-06-14 14:44",  NA, "Break", NA, NA, NA, 
    "2024-06-14 14:46", "2024-06-14 15:06", "11", "Regular Talk", "Automating Sharing of Data Summaries from REDCap, Googlesheets, and Qualtrics with Quarto Webpages and Automated Emails", "Peter Higgins", "University of Michigan",
    "2024-06-14 15:08", "2024-06-14 15:28", "12", "Regular Talk", "An omnibus R package for propensity score based dynamic borrowing methods for survival data", "Sanhita Sengupta and Archie Sachdeva",  "Bristol Myers Squibb",
    "2024-06-14 15:28", "2024-06-14 15:43",  NA, "Break", NA, NA, NA, 
    "2024-06-14 15:43", "2024-06-14 15:53", "13", "Lightning Talk", "org+plnr: Packages for Organized Project Material and Effective Analysis", "Richard White", "Consortium for Statistics in Disease Surveillance",
    "2024-06-14 15:55", "2024-06-14 16:05", "14", "Lightning Talk", "redcapAPI: Analysis-Ready Data Retrieval from REDCap with Advanced Processing Capabilities in R", "Savannah Obregon",  "Vanderbilt University Medical Center",
      "2024-06-14 16:07", "2024-06-14 16:17", "15", "Lightning Talk", "Enhancing Predictive Accuracy and Reproducibility in Medical Research: A Case Study on Thyroid Cancer Using Quarto, tidymodels, and GitHub Actions", "Marly Gotti", "Apple Inc",
      "2024-06-14 16:19", "2024-06-14 16:39", "16", "Contest Winner", NA, NA, NA, 
      "2024-06-14 16:41", "2024-06-14 17:01", "17", "Contest Winner", NA, NA, NA, 
      "2024-06-14 17:03", "2024-06-14 17:23", "18", "Contest Winner", NA, NA, NA, 
      "2024-06-14 17:25", "2024-06-14 17:30", "19", "Closing Remarks", "", "Emily Zabor", "Cleveland Clinic", 
  ) |>
  dplyr::mutate(duration = time_length(ymd_hm(end_time) - ymd_hm(start_time), unit = "mins"))
```

```{r}

# Create a table for the day of events
gt(schedule_day_5) |>
  tab_header(title = md("<br>Meeting Day 2<br>Friday, June 14, 2024.<br><br>")) |> # <- insert the date
  fmt_time(columns = c(start_time, end_time), time_style = "h_m_p") |>
  fmt_duration(
    columns = duration,
    input_units = "minutes",
    output_units = c("hours", "minutes")
  ) |>
  cols_move(columns = duration, after = end_time) |>
  cols_merge(
    columns = c(t_number, t_type, t_title, t_speakers, t_companies),
    pattern = md("<<{1} - >>{2}<br><< {3}<br>{4}<br>{5}>>")
  ) |>
  cols_label(
    start_time ~ "Start Time",
    end_time ~ "End Time",
    duration ~ "Duration",
    t_number ~ ""
  ) |>
  cols_align(align = "center") |>
  cols_width(
    c(start_time, end_time, duration) ~ px(90),
    everything() ~ px(600)
  ) |>
  opt_align_table_header(align = "left") |>
  tab_options(
    heading.background.color = "lightblue",
    column_labels.background.color = "gray85"
  ) |>
  tab_style(
    locations = cells_body(rows = t_type == "Break"),
    style = cell_fill(color = "bisque")
  )

```
